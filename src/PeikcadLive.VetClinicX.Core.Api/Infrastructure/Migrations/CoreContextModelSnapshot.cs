// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PeikcadLive.VetClinicX.Core.Api.Infrastructure;

#nullable disable

namespace PeikcadLive.VetClinicX.Core.Api.Infrastructure.Migrations
{
    [DbContext(typeof(CoreContext))]
    partial class CoreContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PeikcadLive.VetClinicX.Core.Api.Infrastructure.Customers.CustomerState", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ContactEmail")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ContactPhone")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.ToTable("Customer", (string)null);
                });

            modelBuilder.Entity("PeikcadLive.VetClinicX.Core.Api.Infrastructure.Pets.BreedState", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("SpeciesId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SpeciesId");

                    b.ToTable("Breed", (string)null);
                });

            modelBuilder.Entity("PeikcadLive.VetClinicX.Core.Api.Infrastructure.Pets.PetState", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("BreedId")
                        .HasColumnType("int");

                    b.Property<string>("HumanCompanionId")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("VeterinarianId")
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.HasIndex("BreedId");

                    b.HasIndex("HumanCompanionId");

                    b.HasIndex("VeterinarianId");

                    b.ToTable("Pet", (string)null);
                });

            modelBuilder.Entity("PeikcadLive.VetClinicX.Core.Api.Infrastructure.Pets.SpeciesState", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.ToTable("Species", (string)null);
                });

            modelBuilder.Entity("PeikcadLive.VetClinicX.Core.Api.Infrastructure.Veterinarians.VeterinarianState", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ContactEmail")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ContactPhone")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.ToTable("Veterinarian", (string)null);
                });

            modelBuilder.Entity("PeikcadLive.VetClinicX.Core.Api.Infrastructure.Pets.BreedState", b =>
                {
                    b.HasOne("PeikcadLive.VetClinicX.Core.Api.Infrastructure.Pets.SpeciesState", "InnerSpecies")
                        .WithMany()
                        .HasForeignKey("SpeciesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InnerSpecies");
                });

            modelBuilder.Entity("PeikcadLive.VetClinicX.Core.Api.Infrastructure.Pets.PetState", b =>
                {
                    b.HasOne("PeikcadLive.VetClinicX.Core.Api.Infrastructure.Pets.BreedState", "InnerBreed")
                        .WithMany()
                        .HasForeignKey("BreedId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PeikcadLive.VetClinicX.Core.Api.Infrastructure.Customers.CustomerState", null)
                        .WithMany()
                        .HasForeignKey("HumanCompanionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PeikcadLive.VetClinicX.Core.Api.Infrastructure.Veterinarians.VeterinarianState", null)
                        .WithMany()
                        .HasForeignKey("VeterinarianId");

                    b.Navigation("InnerBreed");
                });
#pragma warning restore 612, 618
        }
    }
}
